{"version":3,"sources":["webpack:///./src/components/AuthorAndDate.tsx","webpack:///./src/components/Posts.tsx","webpack:///./src/util/utilityFunctions.js","webpack:///./src/templates/blogs-page.js","webpack:///./src/components/Tags.tsx"],"names":["AuthorAndDate","author","date","className","to","slugify","Posts","title","slug","imgSrc","tags","src","alt","width","height","id","tagsList","module","exports","text","toString","toLowerCase","replace","blogsQuery","BlogsPage","post","data","allMarkdownRemark","edges","map","node","key","fields","frontmatter","image","childImageSharp","fluid","Tags","tag"],"mappings":"6FAAA,iDA8BeA,IApBqC,SAAC,GAG3B,IAFxBC,EAEwB,EAFxBA,OACAC,EACwB,EADxBA,KAEA,OACE,uBAAGC,UAAU,QAAb,KACK,IACH,kBAAC,OAAD,CAAMC,GAAE,YAAcC,kBAAQJ,GAAWE,UAAU,QAChDF,GAHL,QAKQC,EALR,O,kCCfJ,yEAoDeI,IApCqB,SAAC,GAOnB,IANhBC,EAMgB,EANhBA,MACAC,EAKgB,EALhBA,KACAP,EAIgB,EAJhBA,OACAC,EAGgB,EAHhBA,KACAO,EAEgB,EAFhBA,OACAC,EACgB,EADhBA,KAEA,OACE,kBAAC,OAAD,CAAMN,GAAE,IAAMI,GACZ,6BAASL,UAAU,QACjB,yBACEQ,IAAKF,EACLG,IAAI,aACJC,MAAM,QACNC,OAAO,QACPC,GAAG,aACF,IACH,6BAASZ,UAAU,aACjB,4BAAKI,GACL,kBAAC,IAAD,CAAeN,OAAQA,EAAQC,KAAMA,IACrC,kBAAC,IAAD,CAAMc,SAAUN,S,qBC1B1BO,EAAOC,QAAU,CAAEb,QAXH,SAAUc,GACxB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,kCCRpB,+GA4BaC,EAAU,aA6BRC,UAnDG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACDC,kBAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKpB,MAAM,iBACX,6BAASJ,UAAU,aAChBsB,EAAKG,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACd,kBAAC,IAAD,CACEC,IAAKD,EAAKf,GACVP,KAAMsB,EAAKE,OAAOxB,KAClBD,MAAOuB,EAAKG,YAAY1B,MACxBN,OAAQ6B,EAAKG,YAAYhC,OACzBC,KAAM4B,EAAKG,YAAY/B,KACvBQ,KAAMoB,EAAKG,YAAYvB,KACvBD,OAAQqB,EAAKG,YAAYC,MAAM,GAAGC,gBAAgBC,MAAMzB,a,kCCpBpE,iDAuBe0B,IAdmB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,SAAH,OAChC,oCACGA,EAASa,KAAI,SAAAS,GAAG,OACf,kBAAC,OAAD,CAAMP,IAAKO,EAAKlC,GAAE,SAAWC,kBAAQiC,IACnC,4BAAQnC,UAAU,WAAWmC","file":"component---src-templates-blogs-page-js-3343749a0d0d6f365a6a.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\ninterface AuthorAndDateProps {\r\n  author: string\r\n  date: string\r\n}\r\n\r\nconst AuthorAndDate: React.FC<AuthorAndDateProps> = ({\r\n  author,\r\n  date,\r\n}: AuthorAndDateProps) => {\r\n  return (\r\n    <p className=\"info\">\r\n      By{\" \"}\r\n      <Link to={`/authors/${slugify(author)}`} className=\"link\">\r\n        {author}\r\n      </Link>\r\n      , on {date}.\r\n    </p>\r\n  )\r\n}\r\n\r\nAuthorAndDate.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default AuthorAndDate\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../components/CSS/main.css\"\r\nimport Tags from \"./Tags\"\r\nimport AuthorAndDate from \"./AuthorAndDate\"\r\n\r\ninterface PostsProps {\r\n  title: string\r\n  slug: string\r\n  author: string\r\n  date?: string\r\n  imgSrc: string\r\n  tags: string[]\r\n}\r\n\r\nconst Posts: React.FC<PostsProps> = ({\r\n  title,\r\n  slug,\r\n  author,\r\n  date,\r\n  imgSrc,\r\n  tags,\r\n}: PostsProps) => {\r\n  return (\r\n    <Link to={`/${slug}`}>\r\n      <section className=\"post\">\r\n        <img\r\n          src={imgSrc}\r\n          alt=\"Blog Cover\"\r\n          width=\"128px\"\r\n          height=\"128px\"\r\n          id=\"blog-img\"\r\n        />{\" \"}\r\n        <section className=\"blog-info\">\r\n          <h3>{title}</h3>\r\n          <AuthorAndDate author={author} date={date} />\r\n          <Tags tagsList={tags} />\r\n        </section>\r\n      </section>\r\n    </Link>\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  tags: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Posts\r\n","const slugify = function (text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\r\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\r\n    .replace(/^-+/, \"\") // Trim - from start of text\r\n    .replace(/-+$/, \"\") // Trim - from end of text\r\n}\r\n\r\nmodule.exports = { slugify }\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Posts from \"../components/Posts.tsx\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst BlogsPage = ({ data }) => {\r\n  const post = data.allMarkdownRemark\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"All Articles\" />\r\n      <section className=\"all-blogs\">\r\n        {post.edges.map(({ node }) => (\r\n          <Posts\r\n            key={node.id}\r\n            slug={node.fields.slug}\r\n            title={node.frontmatter.title}\r\n            author={node.frontmatter.author}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n            imgSrc={node.frontmatter.image[0].childImageSharp.fluid.src}\r\n          />\r\n        ))}\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const blogsQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          html\r\n          frontmatter {\r\n            title\r\n            author\r\n            date(formatString: \"MMM Do YYYY\")\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 512, maxHeight: 512) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogsPage\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\n\r\ninterface TagsProps {\r\n  tagsList: string[]\r\n}\r\n\r\nconst Tags: React.FC<TagsProps> = ({ tagsList }: TagsProps) => (\r\n  <>\r\n    {tagsList.map(tag => (\r\n      <Link key={tag} to={`/tags/${slugify(tag)}`}>\r\n        <button className=\"tag-btn\">{tag}</button>\r\n      </Link>\r\n    ))}\r\n  </>\r\n)\r\n\r\nTags.propTypes = {\r\n  tagsList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Tags\r\n"],"sourceRoot":""}