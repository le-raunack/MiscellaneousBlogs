{"version":3,"sources":["webpack:///./src/components/AuthorAndDate.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/layout.js","webpack:///./src/templates/author-posts.js","webpack:///./src/components/Posts.tsx","webpack:///./src/util/utilityFunctions.js","webpack:///./src/components/Tags.tsx"],"names":["AuthorAndDate","author","date","className","to","slugify","Header","siteTitle","style","color","textDecoration","activeClassName","defaultProps","Footer","Layout","children","data","useStaticQuery","site","siteMetadata","title","authorPostsQuery","AuthorPosts","pageContext","totalCount","allMarkdownRemark","pageHeader","edges","map","node","key","id","slug","fields","frontmatter","tags","imgSrc","image","childImageSharp","fluid","src","Posts","alt","width","height","tagsList","module","exports","text","toString","toLowerCase","replace","Tags","tag"],"mappings":"6FAAA,iDA8BeA,IApBqC,SAAC,GAG3B,IAFxBC,EAEwB,EAFxBA,OACAC,EACwB,EADxBA,KAEA,OACE,uBAAGC,UAAU,QAAb,KACK,IACH,kBAAC,OAAD,CAAMC,GAAE,YAAcC,kBAAQJ,GAAWE,UAAU,QAChDF,GAHL,QAKQC,EALR,O,uECNEI,G,UAA+C,SAAC,GAEnC,IADjBC,EACiB,EADjBA,UAEA,OACE,gCACE,yBAAKJ,UAAU,OACb,uBAAGA,UAAU,QACX,kBAAC,OAAD,CAAMC,GAAG,IAAII,MAAO,CAAEC,MAAO,UAAWC,eAAgB,YACrDH,IAGL,kBAAC,OAAD,CACEH,GAAG,YACHD,UAAU,YACVQ,gBAAgB,eAHlB,YAOA,kBAAC,OAAD,CAAMP,GAAG,QAAQD,UAAU,YAAYQ,gBAAgB,eAAvD,QAGA,kBAAC,OAAD,CAAMP,GAAG,WAAWD,UAAU,YAAYQ,gBAAgB,eAA1D,eAYRL,EAAOM,aAAe,CACpBL,UAAW,IAGED,QC7BAO,EAdU,WACvB,OACE,gCACE,oCACA,iCACE,gDACA,2BACE,kBAAC,OAAD,CAAMT,GAAG,oBAAT,wBC2BKU,IAxBA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVC,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQV,WAAW,UAAAS,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,8BAAOL,GACP,kBAAC,EAAD,S,yDC3BN,yGA+BaM,EAAgB,aAgCdC,UA3DK,SAAC,GAA2B,IAAzBN,EAAwB,EAAxBA,KAAMO,EAAkB,EAAlBA,YAEnBC,EAAeR,EAAKS,kBAApBD,WAEFE,EAAgBF,EAAN,SACC,IAAfA,EAAA,QADc,gBADGD,EAAXtB,OAIR,OACE,kBAAC,IAAD,KACE,2BAAIyB,GACJ,6BAASvB,UAAU,oBAChBa,EAAKS,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,KAAMH,EAAKI,OAAOD,KAClBZ,MAAOS,EAAKK,YAAYd,MACxBnB,OAAQ4B,EAAKK,YAAYjC,OACzBC,KAAM2B,EAAKK,YAAYhC,KACvBiC,KAAMN,EAAKK,YAAYC,KACvBC,OAAQP,EAAKK,YAAYG,MAAM,GAAGC,gBAAgBC,MAAMC,a,kCCxBpE,yEAoDeC,IApCqB,SAAC,GAOnB,IANhBrB,EAMgB,EANhBA,MACAY,EAKgB,EALhBA,KACA/B,EAIgB,EAJhBA,OACAC,EAGgB,EAHhBA,KACAkC,EAEgB,EAFhBA,OACAD,EACgB,EADhBA,KAEA,OACE,kBAAC,OAAD,CAAM/B,GAAE,IAAM4B,GACZ,6BAAS7B,UAAU,QACjB,yBACEqC,IAAKJ,EACLM,IAAI,aACJC,MAAM,QACNC,OAAO,QACPb,GAAG,aACF,IACH,6BAAS5B,UAAU,aACjB,4BAAKiB,GACL,kBAAC,IAAD,CAAenB,OAAQA,EAAQC,KAAMA,IACrC,kBAAC,IAAD,CAAM2C,SAAUV,S,qBC1B1BW,EAAOC,QAAU,CAAE1C,QAXH,SAAU2C,GACxB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,kCCRpB,iDAuBeC,IAdmB,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAH,OAChC,oCACGA,EAASjB,KAAI,SAAAyB,GAAG,OACf,kBAAC,OAAD,CAAMvB,IAAKuB,EAAKjD,GAAE,SAAWC,kBAAQgD,IACnC,4BAAQlD,UAAU,WAAWkD","file":"component---src-templates-author-posts-js-cc61d2746fe773dada16.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\ninterface AuthorAndDateProps {\r\n  author: string\r\n  date: string\r\n}\r\n\r\nconst AuthorAndDate: React.FC<AuthorAndDateProps> = ({\r\n  author,\r\n  date,\r\n}: AuthorAndDateProps) => {\r\n  return (\r\n    <p className=\"info\">\r\n      By{\" \"}\r\n      <Link to={`/authors/${slugify(author)}`} className=\"link\">\r\n        {author}\r\n      </Link>\r\n      , on {date}.\r\n    </p>\r\n  )\r\n}\r\n\r\nAuthorAndDate.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default AuthorAndDate\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport \"./CSS/main.css\"\r\n\r\ninterface HeaderProps {\r\n  siteTitle: string\r\n}\r\n\r\nconst Header: React.FunctionComponent<HeaderProps> = ({\r\n  siteTitle,\r\n}: HeaderProps) => {\r\n  return (\r\n    <header>\r\n      <div className=\"nav\">\r\n        <p className=\"home\">\r\n          <Link to=\"/\" style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\r\n            {siteTitle}\r\n          </Link>\r\n        </p>\r\n        <Link\r\n          to=\"/articles\"\r\n          className=\"nav-links\"\r\n          activeClassName=\"active-link\"\r\n        >\r\n          Articles\r\n        </Link>\r\n        <Link to=\"/tags\" className=\"nav-links\" activeClassName=\"active-link\">\r\n          Tags\r\n        </Link>\r\n        <Link to=\"/authors\" className=\"nav-links\" activeClassName=\"active-link\">\r\n          Authors\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer>\r\n      <span>MB</span>\r\n      <section>\r\n        <p>©Raunack Tripathi</p>\r\n        <p>\r\n          <Link to=\"/troubleshooting\">Troubleshooting→</Link>\r\n        </p>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Header from \"./header.tsx\"\r\nimport Footer from \"./Footer.tsx\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main>{children}</main>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import { graphql } from \"gatsby\"\r\nimport React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Posts from \"../components/Posts.tsx\"\r\n\r\nconst AuthorPosts = ({ data, pageContext }) => {\r\n  \r\n  const { totalCount } = data.allMarkdownRemark\r\n  const { author } = pageContext\r\n  const pageHeader = `${totalCount} post${\r\n    totalCount === 1 ? `` : `s`\r\n  } authored by ${author}`\r\n  return (\r\n    <Layout>\r\n      <p>{pageHeader}</p>\r\n      <section className=\"sorted-by-author\">\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n          <Posts\r\n            key={node.id}\r\n            slug={node.fields.slug}\r\n            title={node.frontmatter.title}\r\n            author={node.frontmatter.author}\r\n            date={node.frontmatter.date}\r\n            tags={node.frontmatter.tags}\r\n            imgSrc={node.frontmatter.image[0].childImageSharp.fluid.src}\r\n          />\r\n        ))}\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const authorPostsQuery = graphql`\r\n  query($author: String!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { author: { in: [$author] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            author\r\n            date(formatString: \"MMM Do YYYY\")\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 512, maxHeight: 512) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default AuthorPosts\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../components/CSS/main.css\"\r\nimport Tags from \"./Tags\"\r\nimport AuthorAndDate from \"./AuthorAndDate\"\r\n\r\ninterface PostsProps {\r\n  title: string\r\n  slug: string\r\n  author: string\r\n  date?: string\r\n  imgSrc: string\r\n  tags: string[]\r\n}\r\n\r\nconst Posts: React.FC<PostsProps> = ({\r\n  title,\r\n  slug,\r\n  author,\r\n  date,\r\n  imgSrc,\r\n  tags,\r\n}: PostsProps) => {\r\n  return (\r\n    <Link to={`/${slug}`}>\r\n      <section className=\"post\">\r\n        <img\r\n          src={imgSrc}\r\n          alt=\"Blog Cover\"\r\n          width=\"128px\"\r\n          height=\"128px\"\r\n          id=\"blog-img\"\r\n        />{\" \"}\r\n        <section className=\"blog-info\">\r\n          <h3>{title}</h3>\r\n          <AuthorAndDate author={author} date={date} />\r\n          <Tags tagsList={tags} />\r\n        </section>\r\n      </section>\r\n    </Link>\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  tags: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Posts\r\n","const slugify = function (text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\r\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\r\n    .replace(/^-+/, \"\") // Trim - from start of text\r\n    .replace(/-+$/, \"\") // Trim - from end of text\r\n}\r\n\r\nmodule.exports = { slugify }\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\n\r\ninterface TagsProps {\r\n  tagsList: string[]\r\n}\r\n\r\nconst Tags: React.FC<TagsProps> = ({ tagsList }: TagsProps) => (\r\n  <>\r\n    {tagsList.map(tag => (\r\n      <Link key={tag} to={`/tags/${slugify(tag)}`}>\r\n        <button className=\"tag-btn\">{tag}</button>\r\n      </Link>\r\n    ))}\r\n  </>\r\n)\r\n\r\nTags.propTypes = {\r\n  tagsList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Tags\r\n"],"sourceRoot":""}