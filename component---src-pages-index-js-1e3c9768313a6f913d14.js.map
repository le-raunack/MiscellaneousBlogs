{"version":3,"sources":["webpack:///./src/components/AuthorAndDate.tsx","webpack:///./src/components/LatestPosts.tsx","webpack:///./src/components/Intro.tsx","webpack:///./src/pages/index.js","webpack:///./src/images/index-page-cover.png","webpack:///./src/components/Posts.tsx","webpack:///./src/util/utilityFunctions.js","webpack:///./src/components/Tags.tsx"],"names":["AuthorAndDate","author","date","className","to","slugify","latestPostQuery","LatestPosts","query","render","data","allMarkdownRemark","edges","map","node","key","id","title","frontmatter","slug","fields","tags","imgSrc","image","childImageSharp","fluid","src","Intro","Fragment","coverSrc","alt","IndexPage","module","exports","Posts","clName","width","height","tagsList","text","toString","toLowerCase","replace","Tags","tag"],"mappings":"6FAAA,iDA8BeA,IApBqC,SAAC,GAG3B,IAFxBC,EAEwB,EAFxBA,OACAC,EACwB,EADxBA,KAEA,OACE,uBAAGC,UAAU,QAAb,KACK,IACH,kBAAC,OAAD,CAAMC,GAAE,YAAcC,kBAAQJ,GAAWE,UAAU,QAChDF,GAHL,QAKQC,EALR,O,oCCfJ,iDAiCaI,EAAkB,aA+BhBC,IA5De,kBAC5B,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GACN,OACE,oCACE,4CACA,6BAASP,UAAU,mBAChBO,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MACxBhB,OAAQa,EAAKI,YAAYjB,OACzBC,KAAMY,EAAKI,YAAYhB,KACvBiB,KAAML,EAAKM,OAAOD,KAClBE,KAAMP,EAAKI,YAAYG,KACvBC,OAAQR,EAAKI,YAAYK,MAAM,GAAGC,gBAAgBC,MAAMC,SAG5D,kBAAC,OAAD,CAAMtB,GAAG,aACP,4BAAQD,UAAU,OAAlB,wB,mGCgBCwB,EApCS,WACtB,OACE,kBAAC,IAAMC,SAAP,KACE,6BAASzB,UAAU,oBACjB,uBAAGA,UAAU,iBAAb,iCAGA,uBAAGA,UAAU,cAAb,0PAMA,yBAAKuB,IAAKG,IAAUb,GAAG,cAAcc,IAAI,WAE3C,6BAAS3B,UAAU,cACjB,kBAAC,OAAD,CAAMC,GAAG,sBACP,wBAAID,UAAU,OAAd,iBAEF,kBAAC,OAAD,CAAMC,GAAG,iBACP,wBAAID,UAAU,OAAd,YAEF,kBAAC,OAAD,CAAMC,GAAG,eACP,wBAAID,UAAU,OAAd,UAEF,kBAAC,OAAD,CAAMC,GAAG,iBACP,wBAAID,UAAU,OAAd,YAEF,kBAAC,OAAD,CAAMC,GAAG,SACP,4BAAQD,UAAU,OAAlB,mB,oCCnBK4B,UARG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,MAAM,SACX,kBAAC,EAAD,MACA,kBAACV,EAAA,EAAD,S,qBCVJyB,EAAOC,QAAU,IAA0B,gE,kCCA3C,yEAsDeC,IArCqB,SAAC,GAQnB,IAPhBjB,EAOgB,EAPhBA,MACAE,EAMgB,EANhBA,KACAlB,EAKgB,EALhBA,OACAC,EAIgB,EAJhBA,KACAoB,EAGgB,EAHhBA,OACAD,EAEgB,EAFhBA,KAEgB,IADhBc,cACgB,MADP,GACO,EAChB,OACE,kBAAC,OAAD,CAAM/B,GAAE,IAAMe,GACZ,6BAAShB,UAAS,QAAUgC,GAC1B,yBACET,IAAKJ,EACLQ,IAAI,aACJM,MAAM,QACNC,OAAO,QACPrB,GAAG,aACF,IACH,6BAASb,UAAU,aACjB,4BAAKc,GACL,kBAAC,IAAD,CAAehB,OAAQA,EAAQC,KAAMA,IACrC,kBAAC,IAAD,CAAMoC,SAAUjB,S,qBC5B1BW,EAAOC,QAAU,CAAE5B,QAXH,SAAUkC,GACxB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,kCCRpB,iDAuBeC,IAdmB,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAH,OAChC,oCACGA,EAASzB,KAAI,SAAA+B,GAAG,OACf,kBAAC,OAAD,CAAM7B,IAAK6B,EAAKxC,GAAE,SAAWC,kBAAQuC,IACnC,4BAAQzC,UAAU,WAAWyC","file":"component---src-pages-index-js-1e3c9768313a6f913d14.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\ninterface AuthorAndDateProps {\r\n  author: string\r\n  date: string\r\n}\r\n\r\nconst AuthorAndDate: React.FC<AuthorAndDateProps> = ({\r\n  author,\r\n  date,\r\n}: AuthorAndDateProps) => {\r\n  return (\r\n    <p className=\"info\">\r\n      By{\" \"}\r\n      <Link to={`/authors/${slugify(author)}`} className=\"link\">\r\n        {author}\r\n      </Link>\r\n      , on {date}.\r\n    </p>\r\n  )\r\n}\r\n\r\nAuthorAndDate.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default AuthorAndDate\r\n","import React from \"react\"\r\nimport Posts from \"./Posts\"\r\nimport { graphql, Link, StaticQuery } from \"gatsby\"\r\n\r\nconst LatestPosts: React.FC = () => (\r\n  <StaticQuery\r\n    query={latestPostQuery}\r\n    render={data => {\r\n      return (\r\n        <>\r\n          <h2>Latest Blogs</h2>\r\n          <section className=\"posts-container\">\r\n            {data.allMarkdownRemark.edges.map(({ node }) => (\r\n              <Posts\r\n                key={node.id}\r\n                title={node.frontmatter.title}\r\n                author={node.frontmatter.author}\r\n                date={node.frontmatter.date}\r\n                slug={node.fields.slug}\r\n                tags={node.frontmatter.tags}\r\n                imgSrc={node.frontmatter.image[0].childImageSharp.fluid.src}\r\n              />\r\n            ))}\r\n            <Link to=\"/articles\">\r\n              <button className=\"tag\">More blogs →</button>\r\n            </Link>\r\n          </section>\r\n        </>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nexport const latestPostQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 2\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMM Do YYYY\")\r\n            author\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 512, maxHeight: 512) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default LatestPosts\r\n","import React from \"react\"\r\nimport coverSrc from \"../images/index-page-cover.png\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Intro: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"index-page-cover\">\r\n        <p className=\"intro-heading\">\r\n          Blogs for literally anything!\r\n        </p>\r\n        <p className=\"intro-desc\">\r\n          Welcome to Miscellaneous Blogs! Yeah, we're aware it's little over the\r\n          top. The authors have individual opinions and are not accountable for\r\n          each other (yeet). And yes, the images next to this wall of text will\r\n          have something to do with all this.\r\n        </p>\r\n        <img src={coverSrc} id=\"index-cover\" alt=\"cover\" />\r\n      </section>\r\n      <section className=\"intro-tags\">\r\n        <Link to=\"/tags/civilization\">\r\n          <li className=\"tag\">Civilization</li>\r\n        </Link>\r\n        <Link to=\"/tags/history\">\r\n          <li className=\"tag\">History</li>\r\n        </Link>\r\n        <Link to=\"/tags/games\">\r\n          <li className=\"tag\">Games</li>\r\n        </Link>\r\n        <Link to=\"/tags/reviews\">\r\n          <li className=\"tag\">Reviews</li>\r\n        </Link>\r\n        <Link to=\"/tags\">\r\n          <button className=\"tag\">More Tags →</button>\r\n        </Link>\r\n      </section>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Intro\r\n","import React from \"react\"\r\nimport Intro from \"../components/Intro.tsx\"\r\nimport LatestPosts from \"../components/LatestPosts.tsx\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <Intro />\r\n    <LatestPosts />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","module.exports = __webpack_public_path__ + \"static/index-page-cover-2c459da032db6030d4dd1efb369e5606.png\";","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../components/CSS/main.css\"\r\nimport Tags from \"./Tags\"\r\nimport AuthorAndDate from \"./AuthorAndDate\"\r\n\r\ninterface PostsProps {\r\n  title: string\r\n  slug: string\r\n  author: string\r\n  date?: string\r\n  imgSrc: string\r\n  tags: string[]\r\n  clName?: string\r\n}\r\n\r\nconst Posts: React.FC<PostsProps> = ({\r\n  title,\r\n  slug,\r\n  author,\r\n  date,\r\n  imgSrc,\r\n  tags,\r\n  clName = \"\",\r\n}: PostsProps) => {\r\n  return (\r\n    <Link to={`/${slug}`}>\r\n      <section className={`post ${clName}`}>\r\n        <img\r\n          src={imgSrc}\r\n          alt=\"Blog Cover\"\r\n          width=\"128px\"\r\n          height=\"128px\"\r\n          id=\"blog-img\"\r\n        />{\" \"}\r\n        <section className=\"blog-info\">\r\n          <h3>{title}</h3>\r\n          <AuthorAndDate author={author} date={date} />\r\n          <Tags tagsList={tags} />\r\n        </section>\r\n      </section>\r\n    </Link>\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  tags: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Posts\r\n","const slugify = function (text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\r\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\r\n    .replace(/^-+/, \"\") // Trim - from start of text\r\n    .replace(/-+$/, \"\") // Trim - from end of text\r\n}\r\n\r\nmodule.exports = { slugify }\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\n\r\ninterface TagsProps {\r\n  tagsList: string[]\r\n}\r\n\r\nconst Tags: React.FC<TagsProps> = ({ tagsList }: TagsProps) => (\r\n  <>\r\n    {tagsList.map(tag => (\r\n      <Link key={tag} to={`/tags/${slugify(tag)}`}>\r\n        <button className=\"tag-btn\">{tag}</button>\r\n      </Link>\r\n    ))}\r\n  </>\r\n)\r\n\r\nTags.propTypes = {\r\n  tagsList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Tags\r\n"],"sourceRoot":""}