{"version":3,"sources":["webpack:///./src/templates/tag-posts.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/AuthorAndDate.js","webpack:///./src/util/utilityFunctions.js","webpack:///./src/components/Posts.js","webpack:///./src/components/Tags.js"],"names":["tagQuery","TagPost","data","tag","pageContext","totalCount","allMarkdownRemark","pageHeader","className","edges","map","node","key","id","slug","fields","title","frontmatter","author","date","tags","imgSrc","image","slice","i","childImageSharp","fluid","src","clName","Header","siteTitle","to","style","color","textDecoration","activeClassName","defaultProps","Footer","Layout","children","useStaticQuery","site","siteMetadata","AuthorAndDate","slugify","module","exports","text","toString","toLowerCase","replace","Posts","alt","width","height","tagsList","Tags"],"mappings":"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","file":"component---src-templates-tag-posts-js-83f1e3b95301e1acb796.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { graphql } from \"gatsby\"\r\nimport Posts from \"../components/Posts\"\r\n\r\nconst TagPost = ({ data, pageContext }) => {\r\n  const { tag } = pageContext\r\n  const { totalCount } = data.allMarkdownRemark\r\n  const pageHeader = `${totalCount} post${\r\n    totalCount === 1 ? `` : `s`\r\n  } tagged with \"${tag}\"`\r\n  return (\r\n    <section>\r\n      <Layout>\r\n        <p>{pageHeader}</p>\r\n        <section className=\"sorted-by-tag\">\r\n          {data.allMarkdownRemark.edges.map(({ node }) => (\r\n            <Posts\r\n              key={node.id}\r\n              slug={node.fields.slug}\r\n              title={node.frontmatter.title}\r\n              author={node.frontmatter.author}\r\n              date={node.frontmatter.date}\r\n              tags={node.frontmatter.tags}\r\n              imgSrc={node.frontmatter.image\r\n                .slice(0, 1)\r\n                .map(i => i.childImageSharp.fluid.src)}\r\n              clName=\"sorted-by-author\"\r\n            />\r\n          ))}\r\n        </section>\r\n      </Layout>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport const tagQuery = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMM Do YYYY\")\r\n            author\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 512, maxHeight: 512) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default TagPost\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport \"./CSS/main.css\"\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  return (\r\n    <header>\r\n      <div className=\"nav\">\r\n        <p className=\"home\">\r\n          <Link to=\"/\" style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\r\n            {siteTitle}\r\n          </Link>\r\n        </p>\r\n        <Link to=\"/articles\" className=\"nav-links\" activeClassName=\"active-link\">\r\n          Articles\r\n        </Link>\r\n        <Link to=\"/tags\" className=\"nav-links\" activeClassName=\"active-link\">\r\n          Tags\r\n        </Link>\r\n        <Link to=\"/authors\" className=\"nav-links\" activeClassName=\"active-link\">\r\n          Authors\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n  return <footer>Â©Raunack Tripathi</footer>\r\n}\r\n\r\nexport default Footer\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main>{children}</main>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\n\r\nconst AuthorAndDate = ({ author, date }) => {\r\n  return (\r\n    <p className=\"info\">\r\n      By <Link to={`/authors/${slugify(author)}`} className=\"link\">{author}</Link>, on {date}.\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default AuthorAndDate\r\n","const slugify = function (text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\r\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\r\n    .replace(/^-+/, \"\") // Trim - from start of text\r\n    .replace(/-+$/, \"\") // Trim - from end of text\r\n}\r\n\r\nmodule.exports = { slugify }\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../components/CSS/main.css\"\r\nimport Tags from \"./Tags\"\r\nimport AuthorAndDate from \"./AuthorAndDate\"\r\n\r\nconst Posts = ({ title, slug, author, date, imgSrc, tags, clName = \"\" }) => {\r\n  return (\r\n    <Link to={`/${slug}`}>\r\n      <section className={`post ${clName}`}>\r\n        <img\r\n          src={imgSrc}\r\n          alt=\"Blog Cover\"\r\n          width=\"128px\"\r\n          height=\"128px\"\r\n          id=\"blog-img\"\r\n        />{\" \"}\r\n        <section className=\"blog-info\">\r\n          <h3>{title}</h3>\r\n          <AuthorAndDate author={author} date={date} />\r\n          <Tags tagsList={tags} />\r\n        </section>\r\n      </section>\r\n    </Link>\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  slug: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  tags: PropTypes.array,\r\n}\r\n\r\nexport default Posts\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { slugify } from \"../util/utilityFunctions\"\r\n\r\nfunction Tags({ tagsList }) {\r\n  return (\r\n    <>\r\n      {tagsList.map(tag => (\r\n        <Link key={tag} to={`/tags/${slugify(tag)}`}>\r\n          <button className=\"tag-btn\">{tag}</button>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  tagsList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Tags\r\n"],"sourceRoot":""}